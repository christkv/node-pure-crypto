var debug = require('sys').debug;
var inspect = require('sys').inspect;
var util = require('utils');
var Long = require('long').Long;

// TreeFish Implementation in Javascript
// const BlockSize = 16;
const KEY_SCHEDULE_CONST = Long.fromString('1BD11BDAA9FC1A22', 16);
const EXPANDED_TWEAK_SIZE = 3;

var TreeFish = exports.TreeFish = function(key, tweaks) {
  if(Array.isArray(key)) key = util.toHex(key);
  if(Array.isArray(tweaks)) tweaks = util.toHex(tweaks);  
  // Validate correct key size
  if(key.length != 64 && key.length != 128 && key.length != 256) throw "Key must be either 256/512/1024 bits";
  if(tweaks.length != 32) throw "Tweaks must be 128 bits";

  // Parse the longs
  tweaks = [Long.fromString(tweaks.slice(0, 16), 16),
    Long.fromString(tweaks.slice(16, 32), 16)]
  // Create tweek array
  this.expandedTweak = new Array(EXPANDED_TWEAK_SIZE);
  // Expand the tweak
  this.expandedTweak[0] = tweaks[0];
  this.expandedTweak[1] = tweaks[1];
  this.expandedTweak[2] = tweaks[0].xor(tweaks[1]);

  // Set statesize
  this.stateSize = key.length;

  // Base variables(defaulted to 256 bit key)
  if(key.length == 64) {
    this.CIPHER_SIZE = 256;
  } else if(key.length == 128) {
    this.CIPHER_SIZE = 512;
  } else if(key.length == 256) {
    this.CIPHER_SIZE = 1024;
  }

  this.CIPHER_QWORDS = this.CIPHER_SIZE / 64;
  this.EXPANDED_KEY_SIZE = this.CIPHER_QWORDS + 1;      
  this.BlockSize = this.CIPHER_SIZE / 8;
  // Create space for key
  this.expanedKey = new Array(this.EXPANDED_KEY_SIZE);
  this.expanedKey[this.EXPANDED_KEY_SIZE - 1] = KEY_SCHEDULE_CONST;
  this.cipherIn = new Array(this.stateSize / 64);
  this.cipherOut = new Array(this.stateSize / 64);
  
  // Set key
  var i = 0;
  var parity = KEY_SCHEDULE_CONST;
  
  for(i = 0; i < this.expanedKey.length - 1; i++) {
    this.expanedKey[i] = Long.fromString(key.slice(i*16, i*16 + 16), 16);
    parity = parity.xor(this.expanedKey[i]);
  }
  
  this.expanedKey[i] = parity;  
}

TreeFish.prototype.getBlockSize = function() {
  return BlockSize;
}

TreeFish.prototype.encrypt = function(src, index) {
  index = index == null ? 0 : index;

  if(this.CIPHER_SIZE === 256) {
    return this.encryptBlock256(src.slice(index, index + this.BlockSize));
  } else if(this.CIPHER_SIZE === 512) {
    return this.encryptBlock512(src.slice(index, index + this.BlockSize));    
  } else if(this.CIPHER_SIZE === 1024) {
    return this.encryptBlock1024(src.slice(index, index + this.BlockSize));    
  }
}

TreeFish.prototype.encryptBlock256 = function(input) {
  if(Array.isArray(input)) input = util.toHex(input);
  // Unpack variables
  var b0 = Long.fromString(input.slice(0, 16), 16);
  var b1 = Long.fromString(input.slice(16, 32), 16);
  var b2 = Long.fromString(input.slice(32, 48), 16);
  var b3 = Long.fromString(input.slice(48, 64), 16);
  // Unpack key
  var k0 = this.expanedKey[0];
  var k1 = this.expanedKey[1];
  var k2 = this.expanedKey[2];
  var k3 = this.expanedKey[3];
  var k4 = this.expanedKey[4];
  // Unpack tweak
  var t0 = this.expandedTweak[0];
  var t1 = this.expandedTweak[1];
  var t2 = this.expandedTweak[2];
  
  b1 = b1.add(k1.add(t0));
  b0 = b0.add(b1.add(k0));
  b1 = b1.shiftLeft(14).or(b1.shiftRightUnsigned(64 - 14)).xor(b0);  
  b3 = b3.add(k3);
  b2 = b2.add(b3.add(k2).add(t1));
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(52).or(b3.shiftRightUnsigned(64 - 52)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(57).or(b1.shiftRightUnsigned(64 - 57)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(40).or(b3.shiftRightUnsigned(64 - 40)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(5).or(b3.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(37).or(b1.shiftRightUnsigned(64 - 37)).xor(b2);
  b1 = b1.add(k2.add(t1));
  b0 = b0.add(b1.add(k1));
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned(64 - 25)).xor(b0);
  b3 = b3.add(k4).add(Long.fromNumber(1));
  b2 = b2.add(b3).add(k3).add(t2);
  b3 = b3.shiftLeft(33).or(b3.shiftRightUnsigned(64 - 33)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(46).or(b3.shiftRightUnsigned(64 - 46)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(12).or(b1.shiftRightUnsigned(64 - 12)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(58).or(b1.shiftRightUnsigned(64 - 58)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned(64 - 22)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(32).or(b3.shiftRightUnsigned(64 - 32)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(32).or(b1.shiftRightUnsigned(64 - 32)).xor(b2);

  b1 = b1.add(k3).add(t2);
  b0 = b0.add(b1).add(k2);
  b1 = b1.shiftLeft(14).or(b1.shiftRightUnsigned(64 - 14)).xor(b0);
  b3 = b3.add(k0).add(Long.fromNumber(2));
  b2 = b2.add(b3).add(k4).add(t0);  
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(52).or(b3.shiftRightUnsigned(64 - 52)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(57).or(b1.shiftRightUnsigned(64 - 57)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(40).or(b3.shiftRightUnsigned(64 - 40)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(5).or(b3.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(37).or(b1.shiftRightUnsigned(64 - 37)).xor(b2);
  b1 = b1.add(k4).add(t0);  
  b0 = b0.add(b1).add(k3);  
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned(64 - 25)).xor(b0);
  b3 = b3.add(k1).add(Long.fromNumber(3));
  b2 = b2.add(b3).add(k0).add(t1);  
  b3 = b3.shiftLeft(33).or(b3.shiftRightUnsigned(64 - 33)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(46).or(b3.shiftRightUnsigned(64 - 46)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(12).or(b1.shiftRightUnsigned(64 - 12)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(58).or(b1.shiftRightUnsigned(64 - 58)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned(64 - 22)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(32).or(b3.shiftRightUnsigned(64 - 32)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(32).or(b1.shiftRightUnsigned(64 - 32)).xor(b2);

  b1 = b1.add(k0).add(t1);
  b0 = b0.add(b1).add(k4);
  b1 = b1.shiftLeft(14).or(b1.shiftRightUnsigned(64 - 14)).xor(b0);
  b3 = b3.add(k2).add(Long.fromNumber(4));
  b2 = b2.add(b3).add(k1).add(t2);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(52).or(b3.shiftRightUnsigned(64 - 52)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(57).or(b1.shiftRightUnsigned(64 - 57)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(40).or(b3.shiftRightUnsigned(64 - 40)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(5).or(b3.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(37).or(b1.shiftRightUnsigned(64 - 37)).xor(b2);
  b1 = b1.add(k1).add(t2);
  b0 = b0.add(b1).add(k0);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned(64 - 25)).xor(b0);
  b3 = b3.add(k3).add(Long.fromNumber(5));
  b2 = b2.add(b3).add(k2).add(t0);
  b3 = b3.shiftLeft(33).or(b3.shiftRightUnsigned(64 - 33)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(46).or(b3.shiftRightUnsigned(64 - 46)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(12).or(b1.shiftRightUnsigned(64 - 12)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(58).or(b1.shiftRightUnsigned(64 - 58)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned(64 - 22)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(32).or(b3.shiftRightUnsigned(64 - 32)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(32).or(b1.shiftRightUnsigned(64 - 32)).xor(b2);

  b1 = b1.add(k2).add(t0);
  b0 = b0.add(b1).add(k1);
  b1 = b1.shiftLeft(14).or(b1.shiftRightUnsigned(64 - 14)).xor(b0);
  b3 = b3.add(k4).add(Long.fromNumber(6));
  b2 = b2.add(b3).add(k3).add(t1);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(52).or(b3.shiftRightUnsigned(64 - 52)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(57).or(b1.shiftRightUnsigned(64 - 57)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(40).or(b3.shiftRightUnsigned(64 - 40)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(5).or(b3.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(37).or(b1.shiftRightUnsigned(64 - 37)).xor(b2);
  b1 = b1.add(k3).add(t1);
  b0 = b0.add(b1).add(k2);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned(64 - 25)).xor(b0);
  b3 = b3.add(k0).add(Long.fromNumber(7));
  b2 = b2.add(b3).add(k4).add(t2);
  b3 = b3.shiftLeft(33).or(b3.shiftRightUnsigned(64 - 33)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(46).or(b3.shiftRightUnsigned(64 - 46)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(12).or(b1.shiftRightUnsigned(64 - 12)).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(58).or(b1.shiftRightUnsigned(64 - 58)).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned(64 - 22)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(32).or(b3.shiftRightUnsigned(64 - 32)).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(32).or(b1.shiftRightUnsigned(64 - 32)).xor(b2);
  b1 = b1.add(k4).add(t2);
  b0 = b0.add(b1).add(k3);
  b1 = b1.shiftLeft(14).or(b1.shiftRightUnsigned(64 - 14)).xor(b0);

  b3 = b3.add(k1).add(Long.fromNumber(8));
  b2 = b2.add(b3).add(k0).add(t0);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(52).or(b3.shiftRightUnsigned((64 - 52))).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(57).or(b1.shiftRightUnsigned((64 - 57))).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned((64 - 23))).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(40).or(b3.shiftRightUnsigned((64 - 40))).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(5).or(b3.shiftRightUnsigned((64 - 5))).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(37).or(b1.shiftRightUnsigned((64 - 37))).xor(b2);
  b1 = b1.add(k0).add(t0);
  b0 = b0.add(b1).add(k4);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b0);
  b3 = b3.add(k2).add(Long.fromNumber(9));
  b2 = b2.add(b3).add(k1).add(t1);
  b3 = b3.shiftLeft(33).or(b3.shiftRightUnsigned((64 - 33))).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(46).or(b3.shiftRightUnsigned((64 - 46))).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(12).or(b1.shiftRightUnsigned((64 - 12))).xor(b2);
  b0 = b0.add(b1);
  b1 = b1.shiftLeft(58).or(b1.shiftRightUnsigned((64 - 58))).xor(b0);
  b2 = b2.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b2);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(32).or(b3.shiftRightUnsigned((64 - 32))).xor(b0);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(32).or(b1.shiftRightUnsigned((64 - 32))).xor(b2);
  b1 = b1.add(k1).add(t1);
  b0 = b0.add(b1).add(k0);
  b1 = (b1).shiftLeft(14).or(b1.shiftRightUnsigned((64 - 14))).xor(b0);

  b3 = b3.add(k3).add(Long.fromNumber(10));
  b2 = b2.add(b3).add(k2).add(t2);
  b3 = (b3).shiftLeft(16).or(b3.shiftRightUnsigned((64 - 16))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(52).or(b3.shiftRightUnsigned((64 - 52))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(57).or(b1.shiftRightUnsigned((64 - 57))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(23).or(b1.shiftRightUnsigned((64 - 23))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(40).or(b3.shiftRightUnsigned((64 - 40))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(5).or(b3.shiftRightUnsigned((64 - 5))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(37).or(b1.shiftRightUnsigned((64 - 37))).xor(b2);

  b1 = b1.add(k2).add(t2);
  b0 = b0.add(b1).add(k1);
  b1 = (b1).shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b0);
  b3 = b3.add(k4).add(Long.fromNumber(11));
  b2 = b2.add(b3).add(k3).add(t0);
  b3 = (b3).shiftLeft(33).or(b3.shiftRightUnsigned((64 - 33))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(46).or(b3.shiftRightUnsigned((64 - 46))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(12).or(b1.shiftRightUnsigned((64 - 12))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(58).or(b1.shiftRightUnsigned((64 - 58))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(32).or(b3.shiftRightUnsigned((64 - 32))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(32).or(b1.shiftRightUnsigned((64 - 32))).xor(b2);

  b1 = b1.add(k3).add(t0);
  b0 = b0.add(b1).add(k2);
  b1 = (b1).shiftLeft(14).or(b1.shiftRightUnsigned((64 - 14))).xor(b0);
  b3 = b3.add(k0).add(Long.fromNumber(12));
  b2 = b2.add(b3).add(k4).add(t1);
  b3 = (b3).shiftLeft(16).or(b3.shiftRightUnsigned((64 - 16))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(52).or(b3.shiftRightUnsigned((64 - 52))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(57).or(b1.shiftRightUnsigned((64 - 57))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(23).or(b1.shiftRightUnsigned((64 - 23))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(40).or(b3.shiftRightUnsigned((64 - 40))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(5).or(b3.shiftRightUnsigned((64 - 5))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(37).or(b1.shiftRightUnsigned((64 - 37))).xor(b2);
  b1 = b1.add(k4).add(t1);
  b0 = b0.add(b1).add(k3);
  b1 = (b1).shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b0);
  b3 = b3.add(k1).add(Long.fromNumber(13));
  b2 = b2.add(b3).add(k0).add(t2);
  b3 = (b3).shiftLeft(33).or(b3.shiftRightUnsigned((64 - 33))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(46).or(b3.shiftRightUnsigned((64 - 46))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(12).or(b1.shiftRightUnsigned((64 - 12))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(58).or(b1.shiftRightUnsigned((64 - 58))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(32).or(b3.shiftRightUnsigned((64 - 32))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(32).or(b1.shiftRightUnsigned((64 - 32))).xor(b2);

  b1 = b1.add(k0).add(t2);
  b0 = b0.add(b1).add(k4);
  b1 = (b1).shiftLeft(14).or(b1.shiftRightUnsigned((64 - 14))).xor(b0);
  b3 = b3.add(k2).add(Long.fromNumber(14));
  b2 = b2.add(b3).add(k1).add(t0);
  b3 = (b3).shiftLeft(16).or(b3.shiftRightUnsigned((64 - 16))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(52).or(b3.shiftRightUnsigned((64 - 52))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(57).or(b1.shiftRightUnsigned((64 - 57))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(23).or(b1.shiftRightUnsigned((64 - 23))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(40).or(b3.shiftRightUnsigned((64 - 40))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(5).or(b3.shiftRightUnsigned((64 - 5))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(37).or(b1.shiftRightUnsigned((64 - 37))).xor(b2);
  b1 = b1.add(k1).add(t0);
  b0 = b0.add(b1).add(k0);
  b1 = (b1).shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b0);
  b3 = b3.add(k3).add(Long.fromNumber(15));
  b2 = b2.add(b3).add(k2).add(t1);
  b3 = (b3).shiftLeft(33).or(b3.shiftRightUnsigned((64 - 33))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(46).or(b3.shiftRightUnsigned((64 - 46))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(12).or(b1.shiftRightUnsigned((64 - 12))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(58).or(b1.shiftRightUnsigned((64 - 58))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(32).or(b3.shiftRightUnsigned((64 - 32))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(32).or(b1.shiftRightUnsigned((64 - 32))).xor(b2);  
  
  b1 = b1.add(k2).add(t1);
  b0 = b0.add(b1).add(k1);
  b1 = (b1).shiftLeft(14).or(b1.shiftRightUnsigned((64 - 14))).xor(b0);
  b3 = b3.add(k4).add(Long.fromNumber(16));
  b2 = b2.add(b3).add(k3).add(t2);
  b3 = (b3).shiftLeft(16).or(b3.shiftRightUnsigned((64 - 16))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(52).or(b3.shiftRightUnsigned((64 - 52))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(57).or(b1.shiftRightUnsigned((64 - 57))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(23).or(b1.shiftRightUnsigned((64 - 23))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(40).or(b3.shiftRightUnsigned((64 - 40))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(5).or(b3.shiftRightUnsigned((64 - 5))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(37).or(b1.shiftRightUnsigned((64 - 37))).xor(b2);
  b1 = b1.add(k3).add(t2);
  b0 = b0.add(b1).add(k2);
  b1 = (b1).shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b0);
  b3 = b3.add(k0).add(Long.fromNumber(17));
  b2 = b2.add(b3).add(k4).add(t0);
  b3 = (b3).shiftLeft(33).or(b3.shiftRightUnsigned((64 - 33))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(46).or(b3.shiftRightUnsigned((64 - 46))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(12).or(b1.shiftRightUnsigned((64 - 12))).xor(b2);
  b0 = b0.add(b1);
  b1 = (b1).shiftLeft(58).or(b1.shiftRightUnsigned((64 - 58))).xor(b0);
  b2 = b2.add(b3);
  b3 = (b3).shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b2);
  b0 = b0.add(b3);
  b3 = (b3).shiftLeft(32).or(b3.shiftRightUnsigned((64 - 32))).xor(b0);
  b2 = b2.add(b1);
  b1 = (b1).shiftLeft(32).or(b1.shiftRightUnsigned((64 - 32))).xor(b2);

  b0 = b0.add(k3);
  b1 = b1.add(k4).add(t0);  
  b2 = b2.add(k0).add(t1);
  b3 = b3.add(k1).add(Long.fromNumber(18));
    
  return putBytes([b0, b1, b2, b3], [], this.BlockSize);
}

var putBytes = TreeFish.putBytes = function(input, output, byteCount) {
  var j = 0;
  var offset = 0;
  
  for (var i = 0; i < byteCount; i++) {
    output[offset++] = input[i >> 3].shiftRight(j).and(Long.fromNumber(255)).toNumber()
    j = (j + 8) & 63;
  }  
  return output;
}

TreeFish.prototype.encryptBlock512 = function(input) {
  if(Array.isArray(input)) input = util.toHex(input);
  // Unpack variables
  var b0 = Long.fromString(input.slice(0, 16), 16);
  var b1 = Long.fromString(input.slice(16, 32), 16);
  var b2 = Long.fromString(input.slice(32, 48), 16);
  var b3 = Long.fromString(input.slice(48, 64), 16);
  var b4 = Long.fromString(input.slice(64 + 0, 64 + 16), 16);
  var b5 = Long.fromString(input.slice(64 + 16, 64 + 32), 16);
  var b6 = Long.fromString(input.slice(64 + 32, 64 + 48), 16);
  var b7 = Long.fromString(input.slice(64 + 48, 64 + 64), 16);
  // Unpack key
  var k0 = this.expanedKey[0];
  var k1 = this.expanedKey[1];
  var k2 = this.expanedKey[2];
  var k3 = this.expanedKey[3];
  var k4 = this.expanedKey[4];
  var k5 = this.expanedKey[5];
  var k6 = this.expanedKey[6];
  var k7 = this.expanedKey[7];
  var k8 = this.expanedKey[8];
  // Unpack tweak
  var t0 = this.expandedTweak[0];
  var t1 = this.expandedTweak[1];
  var t2 = this.expandedTweak[2];
  
  b1 = b1.add(k1);
  b0 = b0.add(b1.add(k0));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k3);
  b2 = b2.add(b3.add(k2));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k5.add(t0));
  b4 = b4.add(b5.add(k4));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k7);
  b6 = b6.add(b7).add(k6).add(t1);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k2);
  b0 = b0.add(b1.add(k1));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k4);
  b2 = b2.add(b3.add(k3));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k6.add(t1));
  b4 = b4.add(b5.add(k5));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k8.add(Long.fromNumber(1)));
  b6 = b6.add(b7).add(k7).add(t2);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k3);
  b0 = b0.add(b1.add(k2));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k5);
  b2 = b2.add(b3.add(k4));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k7.add(t2));
  b4 = b4.add(b5.add(k6));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k0.add(Long.fromNumber(2)));

  b6 = b6.add(b7).add(k8).add(t0);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k4);
  b0 = b0.add(b1.add(k3));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k6);
  b2 = b2.add(b3.add(k5));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k8.add(t0));
  b4 = b4.add(b5.add(k7));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k1.add(Long.fromNumber(3)));
  b6 = b6.add(b7).add(k0).add(t1);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k5);
  b0 = b0.add(b1.add(k4));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k7);
  b2 = b2.add(b3.add(k6));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k0.add(t1));
  b4 = b4.add(b5.add(k8));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k2.add(Long.fromNumber(4)));

  b6 = b6.add(b7).add(k1).add(t2);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k6);
  b0 = b0.add(b1.add(k5));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k8);
  b2 = b2.add(b3.add(k7));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k1.add(t2));
  b4 = b4.add(b5.add(k0));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k3.add(Long.fromNumber(5)));
  b6 = b6.add(b7).add(k2).add(t0);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k7);
  b0 = b0.add(b1.add(k6));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k0);
  b2 = b2.add(b3.add(k8));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k2.add(t0));
  b4 = b4.add(b5.add(k1));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k4.add(Long.fromNumber(6)));

  b6 = b6.add(b7).add(k3).add(t1);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k8);
  b0 = b0.add(b1.add(k7));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k1);
  b2 = b2.add(b3.add(k0));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k3.add(t1));
  b4 = b4.add(b5.add(k2));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k5.add(Long.fromNumber(7)));
  b6 = b6.add(b7).add(k4).add(t2);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k0);
  b0 = b0.add(b1.add(k8));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k2);
  b2 = b2.add(b3.add(k1));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k4.add(t2));
  b4 = b4.add(b5.add(k3));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k6.add(Long.fromNumber(8)));

  b6 = b6.add(b7).add(k5).add(t0);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k1);
  b0 = b0.add(b1.add(k0));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k3);
  b2 = b2.add(b3.add(k2));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k5.add(t0));
  b4 = b4.add(b5.add(k4));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k7.add(Long.fromNumber(9)));
  b6 = b6.add(b7).add(k6).add(t1);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k2);
  b0 = b0.add(b1.add(k1));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k4);
  b2 = b2.add(b3.add(k3));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k6.add(t1));
  b4 = b4.add(b5.add(k5));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k8.add(Long.fromNumber(10)));

  b6 = b6.add(b7).add(k7).add(t2);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k3);
  b0 = b0.add(b1.add(k2));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k5);
  b2 = b2.add(b3.add(k4));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k7.add(t2));
  b4 = b4.add(b5.add(k6));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k0.add(Long.fromNumber(11)));
  b6 = b6.add(b7).add(k8).add(t0);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k4);
  b0 = b0.add(b1.add(k3));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k6);
  b2 = b2.add(b3.add(k5));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k8.add(t0));
  b4 = b4.add(b5.add(k7));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k1.add(Long.fromNumber(12)));

  b6 = b6.add(b7).add(k0).add(t1);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k5);
  b0 = b0.add(b1.add(k4));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k7);
  b2 = b2.add(b3.add(k6));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k0.add(t1));
  b4 = b4.add(b5.add(k8));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k2.add(Long.fromNumber(13)));
  b6 = b6.add(b7).add(k1).add(t2);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k6);
  b0 = b0.add(b1.add(k5));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k8);
  b2 = b2.add(b3.add(k7));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k1.add(t2));
  b4 = b4.add(b5.add(k0));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k3.add(Long.fromNumber(14)));

  b6 = b6.add(b7).add(k2).add(t0);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k7);
  b0 = b0.add(b1.add(k6));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k0);
  b2 = b2.add(b3.add(k8));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k2.add(t0));
  b4 = b4.add(b5.add(k1));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k4.add(Long.fromNumber(15)));
  b6 = b6.add(b7).add(k3).add(t1);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);
  b1 = b1.add(k8);
  b0 = b0.add(b1.add(k7));
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned((64 - 46))).xor(b0);
  b3 = b3.add(k1);
  b2 = b2.add(b3.add(k0));
  b3 = b3.shiftLeft(36).or(b3.shiftRightUnsigned((64 - 36))).xor(b2);
  b5 = b5.add(k3.add(t1));
  b4 = b4.add(b5.add(k2));
  b5 = b5.shiftLeft(19).or(b5.shiftRightUnsigned((64 - 19))).xor(b4);
  b7 = b7.add(k5.add(Long.fromNumber(16)));

  b6 = b6.add(b7).add(k4).add(t2);
  b7 = b7.shiftLeft(37).or(b7.shiftRightUnsigned((64 - 37))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(33).or(b1.shiftRightUnsigned((64 - 33))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(27).or(b7.shiftRightUnsigned((64 - 27))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(14).or(b5.shiftRightUnsigned((64 - 14))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(42).or(b3.shiftRightUnsigned((64 - 42))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(17).or(b1.shiftRightUnsigned((64 - 17))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(49).or(b3.shiftRightUnsigned((64 - 49))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(36).or(b5.shiftRightUnsigned((64 - 36))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(39).or(b7.shiftRightUnsigned((64 - 39))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(44).or(b1.shiftRightUnsigned((64 - 44))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(9).or(b7.shiftRightUnsigned((64 - 9))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(54).or(b5.shiftRightUnsigned((64 - 54))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(56).or(b3.shiftRightUnsigned((64 - 56))).xor(b4);
  b1 = b1.add(k0);
  b0 = b0.add(b1.add(k8));
  b1 = b1.shiftLeft(39).or(b1.shiftRightUnsigned((64 - 39))).xor(b0);
  b3 = b3.add(k2);
  b2 = b2.add(b3.add(k1));
  b3 = b3.shiftLeft(30).or(b3.shiftRightUnsigned((64 - 30))).xor(b2);
  b5 = b5.add(k4.add(t2));
  b4 = b4.add(b5.add(k3));
  b5 = b5.shiftLeft(34).or(b5.shiftRightUnsigned((64 - 34))).xor(b4);
  b7 = b7.add(k6.add(Long.fromNumber(17)));
  b6 = b6.add(b7).add(k5).add(t0);
  b7 = b7.shiftLeft(24).or(b7.shiftRightUnsigned((64 - 24))).xor(b6);
  b2 = b2.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned((64 - 13))).xor(b2);
  b4 = b4.add(b7);
  b7 = b7.shiftLeft(50).or(b7.shiftRightUnsigned((64 - 50))).xor(b4);
  b6 = b6.add(b5);
  b5 = b5.shiftLeft(10).or(b5.shiftRightUnsigned((64 - 10))).xor(b6);
  b0 = b0.add(b3);
  b3 = b3.shiftLeft(17).or(b3.shiftRightUnsigned((64 - 17))).xor(b0);
  b4 = b4.add(b1);
  b1 = b1.shiftLeft(25).or(b1.shiftRightUnsigned((64 - 25))).xor(b4);
  b6 = b6.add(b3);
  b3 = b3.shiftLeft(29).or(b3.shiftRightUnsigned((64 - 29))).xor(b6);
  b0 = b0.add(b5);
  b5 = b5.shiftLeft(39).or(b5.shiftRightUnsigned((64 - 39))).xor(b0);
  b2 = b2.add(b7);
  b7 = b7.shiftLeft(43).or(b7.shiftRightUnsigned((64 - 43))).xor(b2);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(8).or(b1.shiftRightUnsigned((64 - 8))).xor(b6);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(35).or(b7.shiftRightUnsigned((64 - 35))).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(56).or(b5.shiftRightUnsigned((64 - 56))).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(22).or(b3.shiftRightUnsigned((64 - 22))).xor(b4);

  // Mix in key
  b0 = b0.add(k0);
  b1 = b1.add(k1);
  b2 = b2.add(k2);
  b3 = b3.add(k3);
  b4 = b4.add(k4);
  b5 = b5.add(k5).add(t0);
  b6 = b6.add(k6).add(t1);
  b7 = b7.add(k7).add(Long.fromNumber(18));
  return putBytes([b0, b1, b2, b3, b4, b5, b6, b7], [], this.BlockSize);
}

TreeFish.prototype.encryptBlock1024 = function(input) {
  if(Array.isArray(input)) input = util.toHex(input);
  // Unpack variables
  var b0 = Long.fromString(input.slice(0, 16), 16);
  var b1 = Long.fromString(input.slice(16, 32), 16);
  var b2 = Long.fromString(input.slice(32, 48), 16);
  var b3 = Long.fromString(input.slice(48, 64), 16);
  var b4 = Long.fromString(input.slice(64 + 0, 64 + 16), 16);
  var b5 = Long.fromString(input.slice(64 + 16, 64 + 32), 16);
  var b6 = Long.fromString(input.slice(64 + 32, 64 + 48), 16);
  var b7 = Long.fromString(input.slice(64 + 48, 64 + 64), 16);
  var b8 = Long.fromString(input.slice(128 + 0, 128 + 16), 16);
  var b9 = Long.fromString(input.slice(128 + 16, 128 + 32), 16);
  var b10 = Long.fromString(input.slice(128 + 32, 128 + 48), 16);
  var b11 = Long.fromString(input.slice(128 + 48, 128 + 64), 16);
  var b12 = Long.fromString(input.slice(192 + 0, 192 + 16), 16);
  var b13 = Long.fromString(input.slice(192 + 16, 192 + 32), 16);
  var b14 = Long.fromString(input.slice(192 + 32, 192 + 48), 16);
  var b15 = Long.fromString(input.slice(192 + 48, 192 + 64), 16);
  // Unpack key
  var k0 = this.expanedKey[0];
  var k1 = this.expanedKey[1];
  var k2 = this.expanedKey[2];
  var k3 = this.expanedKey[3];
  var k4 = this.expanedKey[4];
  var k5 = this.expanedKey[5];
  var k6 = this.expanedKey[6];
  var k7 = this.expanedKey[7];
  var k8 = this.expanedKey[8];
  var k9 = this.expanedKey[9];
  var k10 = this.expanedKey[10];
  var k11 = this.expanedKey[11];
  var k12 = this.expanedKey[12];
  var k13 = this.expanedKey[13];
  var k14 = this.expanedKey[14];
  var k15 = this.expanedKey[15];
  var k16 = this.expanedKey[16];
  // Unpack tweak
  var t0 = this.expandedTweak[0];
  var t1 = this.expandedTweak[1];
  var t2 = this.expandedTweak[2];
  
  b1 = b1.add(k1);
  b0 = b0.add(b1).add(k0);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k3);
  b2 = b2.add(b3).add(k2);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k5);
  b4 = b4.add(b5).add(k4);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k7);
  b6 = b6.add(b7).add(k6);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k9);
  b8 = b8.add(b9).add(k8);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k11);
  b10 = b10.add(b11).add(k10);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k13.add(t0);
  b12 = b12.add(b13).add(k12);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k15);
  b14 = b14.add(b15).add(k14.add(t1);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k2);
  b0 = b0.add(b1).add(k1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k4);
  b2 = b2.add(b3).add(k3);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k6);
  b4 = b4.add(b5).add(k5);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k8);
  b6 = b6.add(b7).add(k7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k10);
  b8 = b8.add(b9).add(k9);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k12);
  b10 = b10.add(b11).add(k11);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k14.add(t1);
  b12 = b12.add(b13).add(k13);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k16.add(1);
  b14 = b14.add(b15).add(k15.add(t2);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k3);
  b0 = b0.add(b1).add(k2);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k5);
  b2 = b2.add(b3).add(k4);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k7);
  b4 = b4.add(b5).add(k6);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k9);
  b6 = b6.add(b7).add(k8);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k11);
  b8 = b8.add(b9).add(k10);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k13);
  b10 = b10.add(b11).add(k12);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k15.add(t2);
  b12 = b12.add(b13).add(k14);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k0.add(2);
  b14 = b14.add(b15).add(k16.add(t0);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k4);
  b0 = b0.add(b1).add(k3);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k6);
  b2 = b2.add(b3).add(k5);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k8);
  b4 = b4.add(b5).add(k7);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k10);
  b6 = b6.add(b7).add(k9);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k12);
  b8 = b8.add(b9).add(k11);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k14);
  b10 = b10.add(b11).add(k13);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k16.add(t0);
  b12 = b12.add(b13).add(k15);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k1.add(3);
  b14 = b14.add(b15).add(k0.add(t1);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k5);
  b0 = b0.add(b1).add(k4);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k7);
  b2 = b2.add(b3).add(k6);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k9);
  b4 = b4.add(b5).add(k8);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k11);
  b6 = b6.add(b7).add(k10);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k13);
  b8 = b8.add(b9).add(k12);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k15);
  b10 = b10.add(b11).add(k14);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k0.add(t1);
  b12 = b12.add(b13).add(k16);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k2.add(4);
  b14 = b14.add(b15).add(k1.add(t2);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k6);
  b0 = b0.add(b1).add(k5);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k8);
  b2 = b2.add(b3).add(k7);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k10);
  b4 = b4.add(b5).add(k9);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k12);
  b6 = b6.add(b7).add(k11);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k14);
  b8 = b8.add(b9).add(k13);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k16);
  b10 = b10.add(b11).add(k15);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k1.add(t2);
  b12 = b12.add(b13).add(k0);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k3.add(5);
  b14 = b14.add(b15).add(k2.add(t0);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k7);
  b0 = b0.add(b1).add(k6);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k9);
  b2 = b2.add(b3).add(k8);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k11);
  b4 = b4.add(b5).add(k10);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k13);
  b6 = b6.add(b7).add(k12);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k15);
  b8 = b8.add(b9).add(k14);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k0);
  b10 = b10.add(b11).add(k16);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k2.add(t0);
  b12 = b12.add(b13).add(k1);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k4.add(6);
  b14 = b14.add(b15).add(k3.add(t1);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k8);
  b0 = b0.add(b1).add(k7);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k10);
  b2 = b2.add(b3).add(k9);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k12);
  b4 = b4.add(b5).add(k11);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k14);
  b6 = b6.add(b7).add(k13);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k16);
  b8 = b8.add(b9).add(k15);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k1);
  b10 = b10.add(b11).add(k0);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k3.add(t1);
  b12 = b12.add(b13).add(k2);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k5.add(7);
  b14 = b14.add(b15).add(k4.add(t2);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k9);
  b0 = b0.add(b1).add(k8);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k11);
  b2 = b2.add(b3).add(k10);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k13);
  b4 = b4.add(b5).add(k12);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k15);
  b6 = b6.add(b7).add(k14);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k0);
  b8 = b8.add(b9).add(k16);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k2);
  b10 = b10.add(b11).add(k1);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k4.add(t2);
  b12 = b12.add(b13).add(k3);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k6.add(8);
  b14 = b14.add(b15).add(k5.add(t0);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k10);
  b0 = b0.add(b1).add(k9);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k12);
  b2 = b2.add(b3).add(k11);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k14);
  b4 = b4.add(b5).add(k13);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k16);
  b6 = b6.add(b7).add(k15);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k1);
  b8 = b8.add(b9).add(k0);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k3);
  b10 = b10.add(b11).add(k2);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k5.add(t0);
  b12 = b12.add(b13).add(k4);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k7.add(9);
  b14 = b14.add(b15).add(k6.add(t1);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k11);
  b0 = b0.add(b1).add(k10);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k13);
  b2 = b2.add(b3).add(k12);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k15);
  b4 = b4.add(b5).add(k14);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k0);
  b6 = b6.add(b7).add(k16);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k2);
  b8 = b8.add(b9).add(k1);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k4);
  b10 = b10.add(b11).add(k3);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k6.add(t1);
  b12 = b12.add(b13).add(k5);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k8.add(10);
  b14 = b14.add(b15).add(k7.add(t2);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k12);
  b0 = b0.add(b1).add(k11);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k14);
  b2 = b2.add(b3).add(k13);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k16);
  b4 = b4.add(b5).add(k15);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k1);
  b6 = b6.add(b7).add(k0);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k3);
  b8 = b8.add(b9).add(k2);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k5);
  b10 = b10.add(b11).add(k4);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k7.add(t2);
  b12 = b12.add(b13).add(k6);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k9.add(11);
  b14 = b14.add(b15).add(k8.add(t0);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k13);
  b0 = b0.add(b1).add(k12);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k15);
  b2 = b2.add(b3).add(k14);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k0);
  b4 = b4.add(b5).add(k16);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k2);
  b6 = b6.add(b7).add(k1);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k4);
  b8 = b8.add(b9).add(k3);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k6);
  b10 = b10.add(b11).add(k5);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k8.add(t0);
  b12 = b12.add(b13).add(k7);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k10.add(12);
  b14 = b14.add(b15).add(k9.add(t1);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k14);
  b0 = b0.add(b1).add(k13);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k16);
  b2 = b2.add(b3).add(k15);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k1);
  b4 = b4.add(b5).add(k0);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k3);
  b6 = b6.add(b7).add(k2);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k5);
  b8 = b8.add(b9).add(k4);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k7);
  b10 = b10.add(b11).add(k6);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k9.add(t1);
  b12 = b12.add(b13).add(k8);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k11.add(13);
  b14 = b14.add(b15).add(k10.add(t2);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k15);
  b0 = b0.add(b1).add(k14);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k0);
  b2 = b2.add(b3).add(k16);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k2);
  b4 = b4.add(b5).add(k1);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k4);
  b6 = b6.add(b7).add(k3);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k6);
  b8 = b8.add(b9).add(k5);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k8);
  b10 = b10.add(b11).add(k7);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k10.add(t2);
  b12 = b12.add(b13).add(k9);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k12.add(14);
  b14 = b14.add(b15).add(k11.add(t0);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k16);
  b0 = b0.add(b1).add(k15);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k1);
  b2 = b2.add(b3).add(k0);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k3);
  b4 = b4.add(b5).add(k2);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k5);
  b6 = b6.add(b7).add(k4);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k7);
  b8 = b8.add(b9).add(k6);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k9);
  b10 = b10.add(b11).add(k8);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k11.add(t0);
  b12 = b12.add(b13).add(k10);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k13.add(15);
  b14 = b14.add(b15).add(k12.add(t1);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k0);
  b0 = b0.add(b1).add(k16);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k2);
  b2 = b2.add(b3).add(k1);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k4);
  b4 = b4.add(b5).add(k3);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k6);
  b6 = b6.add(b7).add(k5);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k8);
  b8 = b8.add(b9).add(k7);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k10);
  b10 = b10.add(b11).add(k9);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k12.add(t1);
  b12 = b12.add(b13).add(k11);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k14.add(16);
  b14 = b14.add(b15).add(k13.add(t2);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k1);
  b0 = b0.add(b1).add(k0);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k3);
  b2 = b2.add(b3).add(k2);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k5);
  b4 = b4.add(b5).add(k4);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k7);
  b6 = b6.add(b7).add(k6);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k9);
  b8 = b8.add(b9).add(k8);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k11);
  b10 = b10.add(b11).add(k10);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k13.add(t2);
  b12 = b12.add(b13).add(k12);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k15.add(17);
  b14 = b14.add(b15).add(k14.add(t0);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);
  b1 = b1.add(k2);
  b0 = b0.add(b1).add(k1);
  b1 = b1.shiftLeft(24).or(b1.shiftRightUnsigned(64 - 24)).xor(b0);
  b3 = b3.add(k4);
  b2 = b2.add(b3).add(k3);
  b3 = b3.shiftLeft(13).or(b3.shiftRightUnsigned(64 - 13)).xor(b2);
  b5 = b5.add(k6);
  b4 = b4.add(b5).add(k5);
  b5 = b5.shiftLeft(8).or(b5.shiftRightUnsigned(64 - 8)).xor(b4);
  b7 = b7.add(k8);
  b6 = b6.add(b7).add(k7);
  b7 = b7.shiftLeft(47).or(b7.shiftRightUnsigned(64 - 47)).xor(b6);
  b9 = b9.add(k10);
  b8 = b8.add(b9).add(k9);
  b9 = b9.shiftLeft(8).or(b9.shiftRightUnsigned(64 - 8)).xor(b8);
  b11 = b11.add(k12);
  b10 = b10.add(b11).add(k11);
  b11 = b11.shiftLeft(17).or(b11.shiftRightUnsigned(64 - 17)).xor(b10);
  b13 = b13.add(k14.add(t0);
  b12 = b12.add(b13).add(k13);
  b13 = b13.shiftLeft(22).or(b13.shiftRightUnsigned(64 - 22)).xor(b12);
  b15 = b15.add(k16.add(18);
  b14 = b14.add(b15).add(k15.add(t1);
  b15 = b15.shiftLeft(37).or(b15.shiftRightUnsigned(64 - 37)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(38).or(b9.shiftRightUnsigned(64 - 38)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(19).or(b13.shiftRightUnsigned(64 - 19)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(10).or(b11.shiftRightUnsigned(64 - 10)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(55).or(b15.shiftRightUnsigned(64 - 55)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(49).or(b7.shiftRightUnsigned(64 - 49)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(18).or(b3.shiftRightUnsigned(64 - 18)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(23).or(b5.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(52).or(b1.shiftRightUnsigned(64 - 52)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(33).or(b7.shiftRightUnsigned(64 - 33)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(4).or(b5.shiftRightUnsigned(64 - 4)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(51).or(b3.shiftRightUnsigned(64 - 51)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(13).or(b1.shiftRightUnsigned(64 - 13)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(34).or(b15.shiftRightUnsigned(64 - 34)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(41).or(b13.shiftRightUnsigned(64 - 41)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(59).or(b11.shiftRightUnsigned(64 - 59)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(17).or(b9.shiftRightUnsigned(64 - 17)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(5).or(b15.shiftRightUnsigned(64 - 5)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(20).or(b11.shiftRightUnsigned(64 - 20)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(48).or(b13.shiftRightUnsigned(64 - 48)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(41).or(b9.shiftRightUnsigned(64 - 41)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(47).or(b1.shiftRightUnsigned(64 - 47)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(28).or(b5.shiftRightUnsigned(64 - 28)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(16).or(b3.shiftRightUnsigned(64 - 16)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(25).or(b7.shiftRightUnsigned(64 - 25)).xor(b12);
  b1 = b1.add(k3);
  b0 = b0.add(b1).add(k2);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b0);
  b3 = b3.add(k5);
  b2 = b2.add(b3).add(k4);
  b3 = b3.shiftLeft(9).or(b3.shiftRightUnsigned(64 - 9)).xor(b2);
  b5 = b5.add(k7);
  b4 = b4.add(b5).add(k6);
  b5 = b5.shiftLeft(37).or(b5.shiftRightUnsigned(64 - 37)).xor(b4);
  b7 = b7.add(k9);
  b6 = b6.add(b7).add(k8);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b6);
  b9 = b9.add(k11);
  b8 = b8.add(b9).add(k10);
  b9 = b9.shiftLeft(12).or(b9.shiftRightUnsigned(64 - 12)).xor(b8);
  b11 = b11.add(k13);
  b10 = b10.add(b11).add(k12);
  b11 = b11.shiftLeft(47).or(b11.shiftRightUnsigned(64 - 47)).xor(b10);
  b13 = b13.add(k15.add(t1);
  b12 = b12.add(b13).add(k14);
  b13 = b13.shiftLeft(44).or(b13.shiftRightUnsigned(64 - 44)).xor(b12);
  b15 = b15.add(k0.add(19);
  b14 = b14.add(b15).add(k16.add(t2);
  b15 = b15.shiftLeft(30).or(b15.shiftRightUnsigned(64 - 30)).xor(b14);
  b0 = b0.add(b9);
  b9 = b9.shiftLeft(16).or(b9.shiftRightUnsigned(64 - 16)).xor(b0);
  b2 = b2.add(b13);
  b13 = b13.shiftLeft(34).or(b13.shiftRightUnsigned(64 - 34)).xor(b2);
  b6 = b6.add(b11);
  b11 = b11.shiftLeft(56).or(b11.shiftRightUnsigned(64 - 56)).xor(b6);
  b4 = b4.add(b15);
  b15 = b15.shiftLeft(51).or(b15.shiftRightUnsigned(64 - 51)).xor(b4);
  b10 = b10.add(b7);
  b7 = b7.shiftLeft(4).or(b7.shiftRightUnsigned(64 - 4)).xor(b10);
  b12 = b12.add(b3);
  b3 = b3.shiftLeft(53).or(b3.shiftRightUnsigned(64 - 53)).xor(b12);
  b14 = b14.add(b5);
  b5 = b5.shiftLeft(42).or(b5.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b1);
  b1 = b1.shiftLeft(41).or(b1.shiftRightUnsigned(64 - 41)).xor(b8);
  b0 = b0.add(b7);
  b7 = b7.shiftLeft(31).or(b7.shiftRightUnsigned(64 - 31)).xor(b0);
  b2 = b2.add(b5);
  b5 = b5.shiftLeft(44).or(b5.shiftRightUnsigned(64 - 44)).xor(b2);
  b4 = b4.add(b3);
  b3 = b3.shiftLeft(47).or(b3.shiftRightUnsigned(64 - 47)).xor(b4);
  b6 = b6.add(b1);
  b1 = b1.shiftLeft(46).or(b1.shiftRightUnsigned(64 - 46)).xor(b6);
  b12 = b12.add(b15);
  b15 = b15.shiftLeft(19).or(b15.shiftRightUnsigned(64 - 19)).xor(b12);
  b14 = b14.add(b13);
  b13 = b13.shiftLeft(42).or(b13.shiftRightUnsigned(64 - 42)).xor(b14);
  b8 = b8.add(b11);
  b11 = b11.shiftLeft(44).or(b11.shiftRightUnsigned(64 - 44)).xor(b8);
  b10 = b10.add(b9);
  b9 = b9.shiftLeft(25).or(b9.shiftRightUnsigned(64 - 25)).xor(b10);
  b0 = b0.add(b15);
  b15 = b15.shiftLeft(9).or(b15.shiftRightUnsigned(64 - 9)).xor(b0);
  b2 = b2.add(b11);
  b11 = b11.shiftLeft(48).or(b11.shiftRightUnsigned(64 - 48)).xor(b2);
  b6 = b6.add(b13);
  b13 = b13.shiftLeft(35).or(b13.shiftRightUnsigned(64 - 35)).xor(b6);
  b4 = b4.add(b9);
  b9 = b9.shiftLeft(52).or(b9.shiftRightUnsigned(64 - 52)).xor(b4);
  b14 = b14.add(b1);
  b1 = b1.shiftLeft(23).or(b1.shiftRightUnsigned(64 - 23)).xor(b14);
  b8 = b8.add(b5);
  b5 = b5.shiftLeft(31).or(b5.shiftRightUnsigned(64 - 31)).xor(b8);
  b10 = b10.add(b3);
  b3 = b3.shiftLeft(37).or(b3.shiftRightUnsigned(64 - 37)).xor(b10);
  b12 = b12.add(b7);
  b7 = b7.shiftLeft(20).or(b7.shiftRightUnsigned(64 - 20)).xor(b12);  
}

TreeFish.prototype.decrypt = function(src, index) {
  index = index == null ? 0 : index;
  if(this.CIPHER_SIZE == 256) {
    return this.decryptBlock256(src.slice(index, index + this.BlockSize));
  } else if(this.CIPHER_SIZE == 512) {
    return this.decryptBlock512(src.slice(index, index + this.BlockSize));
  } else if(this.CIPHER_SIZE == 1024) {
    return this.decryptBlock1024(src.slice(index, index + this.BlockSize));
  }
}

TreeFish.prototype.decryptBlock512 = function(input) {
  // Unpack variables
  var b0 = Long.fromString(util.toHex(input.slice(0, 8).reverse()), 16);
  var b1 = Long.fromString(util.toHex(input.slice(8, 16).reverse()), 16);
  var b2 = Long.fromString(util.toHex(input.slice(16, 24).reverse()), 16);
  var b3 = Long.fromString(util.toHex(input.slice(24, 32).reverse()), 16);
  var b4 = Long.fromString(util.toHex(input.slice(32 + 0, 32 + 8).reverse()), 16);
  var b5 = Long.fromString(util.toHex(input.slice(32 + 8, 32 + 16).reverse()), 16);
  var b6 = Long.fromString(util.toHex(input.slice(32 + 16, 32 + 24).reverse()), 16);
  var b7 = Long.fromString(util.toHex(input.slice(32 + 24, 32 + 32).reverse()), 16);

  // Unpack key
  var k0 = this.expanedKey[0];
  var k1 = this.expanedKey[1];
  var k2 = this.expanedKey[2];
  var k3 = this.expanedKey[3];
  var k4 = this.expanedKey[4];
  var k5 = this.expanedKey[5];
  var k6 = this.expanedKey[6];
  var k7 = this.expanedKey[7];
  var k8 = this.expanedKey[8];
  // Unpack tweak
  var t0 = this.expandedTweak[0];
  var t1 = this.expandedTweak[1];
  var t2 = this.expandedTweak[2];
  var tmp = Long.ZERO;  

  b0 = b0.subtract(k0);
  b1 = b1.subtract(k1);
  b2 = b2.subtract(k2);
  b3 = b3.subtract(k3);
  b4 = b4.subtract(k4);
  b5 = b5.subtract(k5.add(t0));
  b6 = b6.subtract(k6.add(t1));
  b7 = b7.subtract(k7.add(Long.fromNumber(18)));
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k5).add(t0));
  b7 = b7.subtract(k6.add(Long.fromNumber(17)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k3));
  b5 = b5.subtract(k4.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k1));
  b3 = b3.subtract(k2);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k8));
  b1 = b1.subtract(k0);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k4.add(t2)));
  b7 = b7.subtract(k5.add(Long.fromNumber(16)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k2));
  b5 = b5.subtract(k3.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k0));
  b3 = b3.subtract(k1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k7));
  b1 = b1.subtract(k8);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k3.add(t1)));
  b7 = b7.subtract(k4.add(Long.fromNumber(15)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k1));
  b5 = b5.subtract(k2.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k8));
  b3 = b3.subtract(k0);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k6));
  b1 = b1.subtract(k7);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k2.add(t0)));
  b7 = b7.subtract(k3.add(Long.fromNumber(14)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k0));
  b5 = b5.subtract(k1.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k7));
  b3 = b3.subtract(k8);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k5));
  b1 = b1.subtract(k6);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k1.add(t2)));
  b7 = b7.subtract(k2.add(Long.fromNumber(13)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k8));
  b5 = b5.subtract(k0.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k6));
  b3 = b3.subtract(k7);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k4));
  b1 = b1.subtract(k5);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k0.add(t1)));
  b7 = b7.subtract(k1.add(Long.fromNumber(12)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k7));
  b5 = b5.subtract(k8.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k5));
  b3 = b3.subtract(k6);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k3));
  b1 = b1.subtract(k4);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k8.add(t0)));
  b7 = b7.subtract(k0.add(Long.fromNumber(11)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k6));
  b5 = b5.subtract(k7.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k4));
  b3 = b3.subtract(k5);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k7.add(t2)));
  b7 = b7.subtract(k8.add(Long.fromNumber(10)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k5));
  b5 = b5.subtract(k6.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k3));
  b3 = b3.subtract(k4);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k6.add(t1)));
  b7 = b7.subtract(k7.add(Long.fromNumber(9)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k4));
  b5 = b5.subtract(k5.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k2));
  b3 = b3.subtract(k3);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k5.add(t0)));
  b7 = b7.subtract(k6.add(Long.fromNumber(8)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k3));
  b5 = b5.subtract(k4.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k1));
  b3 = b3.subtract(k2);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k8));
  b1 = b1.subtract(k0);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k4.add(t2)));
  b7 = b7.subtract(k5.add(Long.fromNumber(7)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k2));
  b5 = b5.subtract(k3.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k0));
  b3 = b3.subtract(k1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k7));
  b1 = b1.subtract(k8);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k3.add(t1)));
  b7 = b7.subtract(k4.add(Long.fromNumber(6)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k1));
  b5 = b5.subtract(k2.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k8));
  b3 = b3.subtract(k0);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k6));
  b1 = b1.subtract(k7);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k2.add(t0)));
  b7 = b7.subtract(k3.add(Long.fromNumber(5)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k0));
  b5 = b5.subtract(k1.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k7));
  b3 = b3.subtract(k8);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k5));
  b1 = b1.subtract(k6);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k1.add(t2)));
  b7 = b7.subtract(k2.add(Long.fromNumber(4)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k8));
  b5 = b5.subtract(k0.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k6));
  b3 = b3.subtract(k7);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k4));
  b1 = b1.subtract(k5);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k0.add(t1)));
  b7 = b7.subtract(k1.add(Long.fromNumber(3)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k7));
  b5 = b5.subtract(k8.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k5));
  b3 = b3.subtract(k6);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k3));
  b1 = b1.subtract(k4);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k8.add(t0)));
  b7 = b7.subtract(k0.add(Long.fromNumber(2)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k6));
  b5 = b5.subtract(k7.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k4));
  b3 = b3.subtract(k5);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(35).or(tmp.shiftLeft(64 - 35));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(8).or(tmp.shiftLeft(64 - 8));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(43).or(tmp.shiftLeft(64 - 43));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(29).or(tmp.shiftLeft(64 - 29));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(10).or(tmp.shiftLeft(64 - 10));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(50).or(tmp.shiftLeft(64 - 50));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(13).or(tmp.shiftLeft(64 - 13));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(24).or(tmp.shiftLeft(64 - 24));
  b6 = b6.subtract(b7.add(k7.add(t2)));
  b7 = b7.subtract(k8.add(Long.fromNumber(1)));
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(34).or(tmp.shiftLeft(64 - 34));
  b4 = b4.subtract(b5.add(k5));
  b5 = b5.subtract(k6.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(30).or(tmp.shiftLeft(64 - 30));
  b2 = b2.subtract(b3.add(k3));
  b3 = b3.subtract(k4);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2);
  tmp = b3.xor(b4);
  b3 = tmp.shiftRightUnsigned(56).or(tmp.shiftLeft(64 - 56));
  b4 = b4.subtract(b3);
  tmp = b5.xor(b2);
  b5 = tmp.shiftRightUnsigned(54).or(tmp.shiftLeft(64 - 54));
  b2 = b2.subtract(b5);
  tmp = b7.xor(b0);
  b7 = tmp.shiftRightUnsigned(9).or(tmp.shiftLeft(64 - 9));
  b0 = b0.subtract(b7);
  tmp = b1.xor(b6);
  b1 = tmp.shiftRightUnsigned(44).or(tmp.shiftLeft(64 - 44));
  b6 = b6.subtract(b1);
  tmp = b7.xor(b2);
  b7 = tmp.shiftRightUnsigned(39).or(tmp.shiftLeft(64 - 39));
  b2 = b2.subtract(b7);
  tmp = b5.xor(b0);
  b5 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b0 = b0.subtract(b5);
  tmp = b3.xor(b6);
  b3 = tmp.shiftRightUnsigned(49).or(tmp.shiftLeft(64 - 49));
  b6 = b6.subtract(b3);
  tmp = b1.xor(b4);
  b1 = tmp.shiftRightUnsigned(17).or(tmp.shiftLeft(64 - 17));
  b4 = b4.subtract(b1);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(42).or(tmp.shiftLeft(64 - 42));
  b0 = b0.subtract(b3);
  tmp = b5.xor(b6);
  b5 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b6 = b6.subtract(b5);
  tmp = b7.xor(b4);
  b7 = tmp.shiftRightUnsigned(27).or(tmp.shiftLeft(64 - 27));
  b4 = b4.subtract(b7);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b1);
  tmp = b7.xor(b6);
  b7 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b6 = b6.subtract(b7.add(k6.add(t1)));
  b7 = b7.subtract(k7);
  tmp = b5.xor(b4);
  b5 = tmp.shiftRightUnsigned(19).or(tmp.shiftLeft(64 - 19));
  b4 = b4.subtract(b5.add(k4));
  b5 = b5.subtract(k5.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(36).or(tmp.shiftLeft(64 - 36));
  b2 = b2.subtract(b3.add(k2));
  b3 = b3.subtract(k3);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1);

  return putBytes([b0, b1, b2, b3, b4, b5, b6, b7], [], this.BlockSize);
}

TreeFish.prototype.decryptBlock256 = function(input) {
  // Unpack variables
  var b0 = Long.fromString(util.toHex(input.slice(0, 8).reverse()), 16);
  var b1 = Long.fromString(util.toHex(input.slice(8, 16).reverse()), 16);
  var b2 = Long.fromString(util.toHex(input.slice(16, 24).reverse()), 16);
  var b3 = Long.fromString(util.toHex(input.slice(24, 32).reverse()), 16);

  // Unpack key
  var k0 = this.expanedKey[0];
  var k1 = this.expanedKey  [1];
  var k2 = this.expanedKey[2];
  var k3 = this.expanedKey[3];
  var k4 = this.expanedKey[4];
  // Unpack tweak
  var t0 = this.expandedTweak[0];
  var t1 = this.expandedTweak[1];
  var t2 = this.expandedTweak[2];
  var tmp = Long.ZERO;  

  b0 = b0.subtract(k3);
  b1 = b1.subtract(k4.add(t0));
  b2 = b2.subtract(k0.add(t1));
  b3 = b3.subtract(k1.add(Long.fromNumber(18)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k4).add(t0));
  b3 = b3.subtract(k0.add(Long.fromNumber(17)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k3).add(t2));
  b3 = b3.subtract(k4.add(Long.fromNumber(16)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k2).add(t1));
  b3 = b3.subtract(k3.add(Long.fromNumber(15)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k4));
  b1 = b1.subtract(k0.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k1).add(t0));
  b3 = b3.subtract(k2.add(Long.fromNumber(14)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k3));
  b1 = b1.subtract(k4.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k0).add(t2));
  b3 = b3.subtract(k1.add(Long.fromNumber(13)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k4).add(t1));
  b3 = b3.subtract(k0.add(Long.fromNumber(12)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k3).add(t0));
  b3 = b3.subtract(k4.add(Long.fromNumber(11)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k2).add(t2));
  b3 = b3.subtract(k3.add(Long.fromNumber(10)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k4));
  b1 = b1.subtract(k0.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k1).add(t1));
  b3 = b3.subtract(k2.add(Long.fromNumber(9)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k3));
  b1 = b1.subtract(k4.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k0).add(t0));
  b3 = b3.subtract(k1.add(Long.fromNumber(8)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k4).add(t2));
  b3 = b3.subtract(k0.add(Long.fromNumber(7)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k3).add(t1));
  b3 = b3.subtract(k4.add(Long.fromNumber(6)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k2).add(t0));
  b3 = b3.subtract(k3.add(Long.fromNumber(5)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k4));
  b1 = b1.subtract(k0.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k1).add(t2));
  b3 = b3.subtract(k2.add(Long.fromNumber(4)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k3));
  b1 = b1.subtract(k4.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k0).add(t1));
  b3 = b3.subtract(k1.add(Long.fromNumber(3)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k2));
  b1 = b1.subtract(k3.add(t2));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k4).add(t0));
  b3 = b3.subtract(k0.add(Long.fromNumber(2)));

  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(32).or(tmp.shiftLeft(64 - 32));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(58).or(tmp.shiftLeft(64 - 58));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(22).or(tmp.shiftLeft(64 - 22));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(46).or(tmp.shiftLeft(64 - 46));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(12).or(tmp.shiftLeft(64 - 12));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(25).or(tmp.shiftLeft(64 - 25));
  b0 = b0.subtract(b1.add(k1));
  b1 = b1.subtract(k2.add(t1));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(33).or(tmp.shiftLeft(64 - 33));
  b2 = b2.subtract(b3.add(k3).add(t2));
  b3 = b3.subtract(k4.add(Long.fromNumber(1)));
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(5).or(tmp.shiftLeft(64 - 5));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(37).or(tmp.shiftLeft(64 - 37));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(23).or(tmp.shiftLeft(64 - 23));
  b0 = b0.subtract(b1);
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(40).or(tmp.shiftLeft(64 - 40));
  b2 = b2.subtract(b3);
  tmp = b3.xor(b0);
  b3 = tmp.shiftRightUnsigned(52).or(tmp.shiftLeft(64 - 52));
  b0 = b0.subtract(b3);
  tmp = b1.xor(b2);
  b1 = tmp.shiftRightUnsigned(57).or(tmp.shiftLeft(64 - 57));
  b2 = b2.subtract(b1);
  tmp = b1.xor(b0);
  b1 = tmp.shiftRightUnsigned(14).or(tmp.shiftLeft(64 - 14));
  b0 = b0.subtract(b1.add(k0));
  b1 = b1.subtract(k1.add(t0));
  tmp = b3.xor(b2);
  b3 = tmp.shiftRightUnsigned(16).or(tmp.shiftLeft(64 - 16));
  b2 = b2.subtract(b3.add(k2).add(t1));
  b3 = b3.subtract(k3);

  return putBytes([b0, b1, b2, b3], [], this.BlockSize);
}

